# This workflow will build the Eclipse RCP application with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: RCP build on Ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACCOUNT: minova-afis

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          cache: 'maven'

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        env:
          MAIN_GITHUB_RELEASE_USERNAME: ${{ secrets.MAIN_GITHUB_RELEASE_USERNAME }}
          MAIN_GITHUB_RELEASE_TOKEN: ${{ secrets.MAIN_GITHUB_RELEASE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn --batch-mode verify \
            dependency-check:aggregate \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{env.ACCOUNT}}_${{github.event.repository.name}} \
            -Dsonar.branch.name=${{steps.branch-name.outputs.current_branch}} \
            --file pom.xml \
            --settings .github/settings.xml

      - name: Store report of Dependency Check
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report.html
          path: target/dependency-check-report.html

      - name: Build with Maven
        env:
          MAIN_GITHUB_RELEASE_USERNAME: ${{ secrets.MAIN_GITHUB_RELEASE_USERNAME }}
          MAIN_GITHUB_RELEASE_TOKEN: ${{ secrets.MAIN_GITHUB_RELEASE_TOKEN }}
        run: |
          xvfb-run mvn clean verify --fae -T4 \
          --file pom.xml \
          --settings .github/settings.xml